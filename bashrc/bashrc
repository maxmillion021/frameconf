###############################################
#                  Aliases                    #
###############################################

alias ls='ls --color=auto'
alias ll='ls -lah --color=auto'
alias la='ls -A'
alias l='ls -CF'
alias grep='grep --color=auto'
alias mkdir='mkdir -pv'
alias df='df -h'
alias free='free -h'
alias cp='cp -i'
alias mv='mv -i'
alias rm='trash -v'

# ===== System Aliases ===== #
alias ports='netstat -tulanp'
alias mem='free -h'
alias disk='df -h'

###############################################
#                  Scripts                    #
###############################################

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

###############################################
#                  ENV                        #
###############################################

export EDITOR="vim"
export VISUAL="nvim"
export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTTIMEFORMAT="%F %T "

###############################################
#                  CMD promt                  #
###############################################

# Colors
RESET="\[\033[0m\]"
RED="\[\033[1;31m\]"
GREEN="\[\033[1;32m\]"
YELLOW="\[\033[1;33m\]"
BLUE="\[\033[1;34m\]"
PURPLE="\[\033[1;35m\]"
CYAN="\[\033[1;36m\]"

###############################################
#                  Settings                   #
###############################################

# ===== bash_completion ===== #
if [ -f /etc/bash_completion ]; then
  . /etc/bash_completion
fi
# ===== Starship ===== #
eval "$(starship init bash)"

# ===== Zoxide ===== #
eval "$(zoxide init bash)"

# ===== NPM ===== #
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
## use nvm lts
nvm use --lts

# ===== fzf ===== #

# FZF Installation check and setup
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Enable fuzzy auto-completion and key bindings
eval "$(fzf --bash)"

# FZF Configuration
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border --preview 'bat --style=numbers --color=always --line-range :500 {}'"
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type d --hidden --follow --exclude .git"

# Enhanced completion triggers
export FZF_COMPLETION_TRIGGER='**'

# Use fd (https://github.com/sharkdp/fd) for listing path candidates
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Advanced customization of fzf options via _fzf_comprun function
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
  cd) fzf --preview 'tree -C {} | head -200' "$@" ;;
  export | unset) fzf --preview "eval 'echo \$'{}" "$@" ;;
  ssh) fzf --preview 'dig {}' "$@" ;;
  *) fzf --preview 'bat -n --color=always {}' "$@" ;;
  esac
}

# File search and open
# Ctrl+F to search files
function fzf-find-file() {
  local file
  file=$(fzf --preview 'bat --style=numbers --color=always --line-range :500 {}') &&
    ${EDITOR:-vim} "$file"
}

bind -x '"\C-f": fzf-find-file'

# Git specific fzf functions
function fzf-git-branch() {
  git branch -a --color=always | grep -v '/HEAD\s' | sort |
    fzf --height 50% --ansi --multi --tac --preview-window right:70% \
      --preview 'git log --oneline --graph --date=short --color=always --pretty="format:%C(auto)%cd %h%d %s" $(sed s/^..// <<< {} | cut -d" " -f1)' |
    sed 's/^..//' | cut -d' ' -f1 |
    sed 's#^remotes/##'
}

# Aliases for fzf functions
alias fzfb='fzf-git-branch'

